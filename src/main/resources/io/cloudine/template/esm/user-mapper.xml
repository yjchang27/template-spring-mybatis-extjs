<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.cloudine.template.esm.repository.UserRepository">

	<!-- ==================================================================================== -->
	<!-- 1. Result and Parameter Maps -->
	<!-- ==================================================================================== -->

	<resultMap id="userMap" type="io.cloudine.template.esm.domain.User">
		<result property="id" column="ID" jdbcType="BIGINT"/>
		<result property="username" column="USER_NM" jdbcType="VARCHAR"/>
		<result property="password" column="PASSWD" jdbcType="VARCHAR"/>
		<result property="name" column="NM" jdbcType="VARCHAR"/>
	</resultMap>

	<!-- ==================================================================================== -->
	<!-- 2. Sql Fragments -->
	<!-- ==================================================================================== -->

	<sql id="wherePK">WHERE ID = #{id}</sql>

	<!-- ==================================================================================== -->
	<!-- 3. Select Statement -->
	<!-- ==================================================================================== -->

	<select id="select" parameterType="string" resultMap="userMap">
		SELECT * FROM USER
		<include refid="wherePK"/>
	</select>

	<!-- ==================================================================================== -->
	<!-- 3. Exist Statement -->
	<!-- ==================================================================================== -->

	<select id="exist" parameterType="string" resultType="Integer">
		SELECT COUNT(*) FROM USER
		<include refid="wherePK"/>
	</select>

	<!-- ==================================================================================== -->
	<!-- 4. Insert Statements -->
	<!-- ==================================================================================== -->

	<insert id="insert" parameterType="user" useGeneratedKeys="true" keyProperty="id" keyColumn="ID">
		INSERT INTO USER ( ID, USER_NM, PASSWD, NM )
		VALUES ( #{id}, #{username}, #{password}, #{name} )

		<selectKey resultType="integer" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<!-- ==================================================================================== -->
	<!-- 5. Update Statements -->
	<!-- ==================================================================================== -->

	<update id="update" parameterType="user">
		UPDATE USER
		SET
		ID = #{id},
		USER_NM = #{username},
		PASSWD = #{password},
		NM = #{name}
		<include refid="wherePK"/>
	</update>

	<!-- ==================================================================================== -->
	<!-- 6. Delete Statements -->
	<!-- ==================================================================================== -->

	<delete id="delete" parameterType="string">
		DELETE FROM USER
		<include refid="wherePK"/>
	</delete>
</mapper>